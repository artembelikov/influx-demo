services:
  # Сервис Spring Boot приложения demo
  demo_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demo_app
    ports:
      - "9090:9090"
    depends_on:
      - influxdb_v1  # Если необходимо дождаться запуска InfluxDB
    environment:
      # Здесь можно задать переменные окружения, если нужно
      - SPRING_PROFILES_ACTIVE=prod

  # InfluxDB v1 сервис
  influxdb_v1:
    image: influxdb:1.8
    container_name: influxdb-v1
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=TSA_Mon_LT
      - INFLUXDB_ADMIN_USER=name
      - INFLUXDB_ADMIN_PASSWORD=pass
    volumes:
      - influxdb_v1_data:/var/lib/influxdb

  # InfluxDB v2 сервис
  influxdb_v2:
    image: influxdb:2.0
    container_name: influxdb_v2
    ports:
      - "8087:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=name
      - DOCKER_INFLUXDB_INIT_PASSWORD=pass
      - DOCKER_INFLUXDB_INIT_ORG=example-org
      - DOCKER_INFLUXDB_INIT_BUCKET=example-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=supersecret
    volumes:
      - influxdb_v2_data:/var/lib/influxdb2

  # Grafana сервис
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-new
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana-datasource-config.yaml:/etc/grafana/provisioning/datasources/grafana-datasource-config.yaml
      - ./grafana/dashboard_provisioning.yaml:/etc/grafana/provisioning/dashboards/dashboard_provisioning.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influxdb_v1
      - influxdb_v2

volumes:
  influxdb_v1_data:
  influxdb_v2_data:
  grafana_data: